{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedBack/FeedBack.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","map","button","type","onClick","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","FeedBack","state","countFeedback","event","btnName","target","textContent","toLowerCase","setState","prevState","key","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAkBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCcQC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUC,OAAOC,KAAKJ,GAE5B,OACE,mCACGE,EAAQG,KAAI,SAACC,GAAD,OACX,wBAAQC,KAAK,SAAsBC,QAASP,EAA5C,SACGK,EAAOG,cAAcC,MAAM,EAAG,GAAKJ,EAAOI,MAAM,IADxBJ,SCapBK,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KAEV,yCAAYC,EAAZ,OACA,qDAAwBC,EAAxB,WCEWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCoDEC,E,4MAlDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,cAAgB,SAACC,GACf,IAAMC,EAAUD,EAAME,OAAOC,YAAYC,cAEzC,EAAKC,UAAS,SAACC,GACb,IAAK,IAAMC,KAAOD,EAChB,GAAIC,IAAQN,EACV,OAAO,eAAGM,EAAMD,EAAUC,GAAO,O,4CAKzC,WAAU,IAAD,EACwBC,KAAKV,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBiB,EAAqBnB,EAAOC,EAAUC,EACtCkB,EAAkCC,KAAKC,MACnC,IAAPtB,EAAcmB,GAGjB,OACE,gCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS8B,KAAKV,MACdnB,gBAAiB6B,KAAKT,kBAG1B,cAAC,EAAD,CAASxB,MAAM,aAAf,SAC0B,IAAvBkC,EACC,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,EACPf,mBAAoBgB,IAGtB,cAAC,EAAD,CAAcd,QAAQ,+B,GA3CXiB,aCORC,E,4JATb,WACE,OACE,8BACE,cAAC,EAAD,U,GAJUD,a,MCGlBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be6edd16.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const buttons = Object.keys(options);\r\n\r\n  return (\r\n    <>\r\n      {buttons.map((button) => (\r\n        <button type=\"button\" key={button} onClick={onLeaveFeedback}>\r\n          {button.toUpperCase().slice(0, 1) + button.slice(1)}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n\r\n    <li>Total: {total} </li>\r\n    <li>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"../Section/Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification\";\r\n\r\nclass FeedBack extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countFeedback = (event) => {\r\n    const btnName = event.target.textContent.toLowerCase();\r\n\r\n    this.setState((prevState) => {\r\n      for (const key in prevState) {\r\n        if (key === btnName) {\r\n          return { [key]: prevState[key] + 1 };\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const countTotalFeedback = good + neutral + bad;\r\n    const countPositiveFeedbackPercentage = Math.round(\r\n      (good * 100) / countTotalFeedback\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.countFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback !== 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback}\r\n              positivePercentage={countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedBack;\r\n","import React, { Component } from \"react\";\nimport FeedBack from \"./components/FeedBack\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <FeedBack />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}